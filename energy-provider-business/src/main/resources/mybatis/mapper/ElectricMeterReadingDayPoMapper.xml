<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enn.energy.business.dao.ElectricMeterReadingDayPoMapper" >
  <resultMap id="BaseResultMap" type="com.enn.vo.energy.business.po.ElectricMeterReadingDayPo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="meter_no" property="meterNo" jdbcType="VARCHAR" />
    <result column="metric" property="metric" jdbcType="VARCHAR" />
    <result column="read_time" property="readTime" jdbcType="DATE" />
    <result column="use_quantity" property="useQuantity" jdbcType="DECIMAL" />
    <result column="fees" property="fees" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, meter_no, metric, read_time, use_quantity, fees
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from electric_meter_reading_day
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from electric_meter_reading_day
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.enn.vo.energy.business.po.ElectricMeterReadingDayPo" useGeneratedKeys="true" keyProperty="id" >
    insert into electric_meter_reading_day (meter_no, metric, read_time, 
      use_quantity, fees)
    values (#{meterNo,jdbcType=VARCHAR}, #{metric,jdbcType=VARCHAR}, #{readTime,jdbcType=DATE}, 
      #{useQuantity,jdbcType=DECIMAL}, #{fees,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.enn.vo.energy.business.po.ElectricMeterReadingDayPo" useGeneratedKeys="true" keyProperty="id" >
    insert into electric_meter_reading_day
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="meterNo != null" >
        meter_no,
      </if>
      <if test="metric != null" >
        metric,
      </if>
      <if test="readTime != null" >
        read_time,
      </if>
      <if test="useQuantity != null" >
        use_quantity,
      </if>
      <if test="fees != null" >
        fees,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="meterNo != null" >
        #{meterNo,jdbcType=VARCHAR},
      </if>
      <if test="metric != null" >
        #{metric,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        #{readTime,jdbcType=DATE},
      </if>
      <if test="useQuantity != null" >
        #{useQuantity,jdbcType=DECIMAL},
      </if>
      <if test="fees != null" >
        #{fees,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.enn.vo.energy.business.po.ElectricMeterReadingDayPo" >
    update electric_meter_reading_day
    <set >
      <if test="meterNo != null" >
        meter_no = #{meterNo,jdbcType=VARCHAR},
      </if>
      <if test="metric != null" >
        metric = #{metric,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        read_time = #{readTime,jdbcType=DATE},
      </if>
      <if test="useQuantity != null" >
        use_quantity = #{useQuantity,jdbcType=DECIMAL},
      </if>
      <if test="fees != null" >
        fees = #{fees,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.enn.vo.energy.business.po.ElectricMeterReadingDayPo" >
    update electric_meter_reading_day
    set meter_no = #{meterNo,jdbcType=VARCHAR},
      metric = #{metric,jdbcType=VARCHAR},
      read_time = #{readTime,jdbcType=DATE},
      use_quantity = #{useQuantity,jdbcType=DECIMAL},
      fees = #{fees,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getMeterReadingDay" resultType="com.enn.vo.energy.business.po.DataResp">
    SELECT
    read_time AS dateTime,
    round(use_quantity,2) AS dateValue
    FROM electric_meter_reading_day
    WHERE read_time >= #{startTime}
    AND read_time &lt;= #{endTime}
    AND meter_no IN
    <foreach collection="meterNoList" index="index" item="item" open="(" separator="," close=")">
    #{item}
    </foreach>
    ORDER BY read_time ASC
  </select>

  <select id="getElecSumByDay" resultType="com.enn.vo.energy.business.resp.StatisticsDataResp">
    select   SUM(use_quantity) AS sumQuantity,
    SUM(fees) AS sumFees,
    read_time as readTime
    from electric_meter_reading_day
    WHERE read_time >= #{startTime}
    AND read_time &lt;= #{endTime}
    AND meter_no IN
    <foreach collection="meterNoList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    group by read_time
  </select>

  <select id="getMeterSunmReadingDay" resultType="com.enn.vo.energy.business.po.DataResp">
    SELECT
    LEFT(read_time,7) AS dateTime,
    round(SUM(use_quantity),2) as dateValue
    FROM electric_meter_reading_day
    WHERE read_time >= #{startTime}
    AND read_time &lt;= #{endTime}
    AND meter_no IN
    <foreach collection="meterNoList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>




  <!-- 根据 表号、时间  查询能源用量和  用费和 -->
  <select id="getYesterdayBoardUnit" resultType="com.enn.vo.energy.business.resp.YesterdayBoardUnitResp">
    select sum(use_quantity) as useQuantity,sum(fees) as fees
    from electric_meter_reading_day
    where read_time = #{time}
    AND meter_no IN
    <foreach collection="meters" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>


  <resultMap id="result01" type="com.enn.vo.energy.business.bo.ElecMeterReadingDayStatisticsBo">
    <result column="use_quantity" property="totalElecPower"  jdbcType="DECIMAL"/>
    <result column="fees" property="totalElecFees" jdbcType="DECIMAL" />
  </resultMap>

  <!--查询时间段内的和-->
  <select id="countElecMeterReadingDayByAssignedConditon" resultMap="result01" parameterType="com.enn.vo.energy.business.bo.ElecMeterReadingDayBo">
    select sum(use_quantity) as use_quantity,sum(fees) as fees from electric_meter_reading_day
    <include refid="where_readingday_count_condition" />
  </select>


  <!--查询时间段内的数量-->
  <select id="getCount" resultType="Integer" parameterType="com.enn.vo.energy.business.bo.ElecMeterReadingDayBo">
    select count(0) from electric_meter_reading_day
    <include refid="where_readingday_count_condition" />
  </select>

  <sql id="where_readingday_count_condition">
    <where>
      <if test="equipID !=null">
        and meter_no in
        <foreach collection="equipID" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="start !=null and end !=null">
        and read_time between #{start} and #{end}
      </if>
    </where>
  </sql>

  <select id="getElecSumByD" resultType="com.enn.vo.energy.business.po.ElectricMeterReadingDayPo">
    select SUM(use_quantity) AS useQuantity, SUM(fees) AS fees
    FROM electric_meter_reading_day
    WHERE read_time >= #{startTime}
    AND read_time &lt;= #{endTime}
    AND meter_no IN
    <foreach collection="meterNoList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
</mapper>