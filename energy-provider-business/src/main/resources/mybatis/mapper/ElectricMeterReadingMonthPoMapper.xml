<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enn.energy.business.dao.ElectricMeterReadingMonthPoMapper" >
  <resultMap id="BaseResultMap" type="com.enn.vo.energy.business.po.ElectricMeterReadingMonthPo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="meter_no" property="meterNo" jdbcType="VARCHAR" />
    <result column="metric" property="metric" jdbcType="VARCHAR" />
    <result column="read_time" property="readTime" jdbcType="VARCHAR" />
    <result column="use_quantity" property="useQuantity" jdbcType="DECIMAL" />
    <result column="fees" property="fees" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, meter_no, metric, read_time, use_quantity, fees
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from electric_meter_reading_month
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from electric_meter_reading_month
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.enn.vo.energy.business.po.ElectricMeterReadingMonthPo" useGeneratedKeys="true" keyProperty="id" >
    insert into electric_meter_reading_month (meter_no, metric, read_time, 
      use_quantity, fees)
    values (#{meterNo,jdbcType=VARCHAR}, #{metric,jdbcType=VARCHAR}, #{readTime,jdbcType=VARCHAR}, 
      #{useQuantity,jdbcType=DECIMAL}, #{fees,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.enn.vo.energy.business.po.ElectricMeterReadingMonthPo" useGeneratedKeys="true" keyProperty="id" >
    insert into electric_meter_reading_month
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="meterNo != null" >
        meter_no,
      </if>
      <if test="metric != null" >
        metric,
      </if>
      <if test="readTime != null" >
        read_time,
      </if>
      <if test="useQuantity != null" >
        use_quantity,
      </if>
      <if test="fees != null" >
        fees,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="meterNo != null" >
        #{meterNo,jdbcType=VARCHAR},
      </if>
      <if test="metric != null" >
        #{metric,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        #{readTime,jdbcType=VARCHAR},
      </if>
      <if test="useQuantity != null" >
        #{useQuantity,jdbcType=DECIMAL},
      </if>
      <if test="fees != null" >
        #{fees,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.enn.vo.energy.business.po.ElectricMeterReadingMonthPo" >
    update electric_meter_reading_month
    <set >
      <if test="meterNo != null" >
        meter_no = #{meterNo,jdbcType=VARCHAR},
      </if>
      <if test="metric != null" >
        metric = #{metric,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        read_time = #{readTime,jdbcType=VARCHAR},
      </if>
      <if test="useQuantity != null" >
        use_quantity = #{useQuantity,jdbcType=DECIMAL},
      </if>
      <if test="fees != null" >
        fees = #{fees,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.enn.vo.energy.business.po.ElectricMeterReadingMonthPo" >
    update electric_meter_reading_month
    set meter_no = #{meterNo,jdbcType=VARCHAR},
      metric = #{metric,jdbcType=VARCHAR},
      read_time = #{readTime,jdbcType=VARCHAR},
      use_quantity = #{useQuantity,jdbcType=DECIMAL},
      fees = #{fees,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="getMeterReadingMonth" resultType="com.enn.vo.energy.business.po.DataResp">
        SELECT
        read_time as dateTime,
        round(use_quantity,2) as dateValue
        FROM electric_meter_reading_month
        WHERE read_time >= #{startTime}
        AND read_time &lt;= #{endTime}
        AND meter_no IN
        <foreach collection="meterNoList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY read_time ASC
    </select>

  <select id="getElecSumByMonth" resultType="com.enn.vo.energy.business.resp.StatisticsDataResp">
    select   SUM(use_quantity) AS sumQuantity,
    SUM(fees) AS sumFees,
    read_time as readTime
    from electric_meter_reading_month
    WHERE read_time >= #{startTime}
    AND read_time &lt;= #{endTime}
    AND meter_no IN
    <foreach collection="meterNoList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    group by read_time
  </select>

    <!-- 获取车间表用电月数据 -->
    <select id="electricMonthTotalByWorkShop" resultType="com.enn.vo.energy.business.vo.BoardMonthVo">
        SELECT
            IFNULL(SUM( t1.fees ),0) AS fees,
            IFNULL(SUM( t1.use_quantity ),0) AS useQuantity
        FROM
            electric_meter_reading_month t1
            LEFT JOIN cust_meter t2 ON t2.loop_number = t1.meter_no
            LEFT JOIN accounting_unit t3 ON t2.accounting_id = t3.id
        WHERE
            t3.id = #{workShopId}
            AND
            <if test="dateFlag == 1">
              t1.read_time = DATE_FORMAT( DATE_SUB( curdate( ), INTERVAL 2 MONTH ), '%Y-%m' );
            </if>
            <if test="dateFlag == 0">
                t1.read_time = DATE_FORMAT( DATE_SUB( curdate( ), INTERVAL 1 MONTH ), '%Y-%m' );
            </if>
    </select>

    <!-- 根据表获取month data total-->
    <select id="electricMonthTotal" resultType="com.enn.vo.energy.business.vo.BoardMonthVo">
        SELECT
            IFNULL(SUM(t1.fees),0) AS fees,
            IFNULL(SUM(t1.use_quantity),0) AS useQuantity

        FROM
          electric_meter_reading_month t1
        WHERE
          t1.meter_no IN
            <foreach collection="loopNumbers" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        AND
        <if test="dateFlag == 1">
            t1.read_time = DATE_FORMAT( DATE_SUB( curdate( ), INTERVAL 2 MONTH ), '%Y-%m' );
        </if>
        <if test="dateFlag == 0">
            t1.read_time = DATE_FORMAT( DATE_SUB( curdate( ), INTERVAL 1 MONTH ), '%Y-%m' );
        </if>
    </select>

    <!-- 根据表获取month data-->
    <select id="electricMonthData" resultType="com.enn.vo.energy.business.vo.BoardMonthVo">
        SELECT
            t1.fees AS fees,
            t1.use_quantity AS useQuantity,
            t1.meter_no AS meterNo,
            t3.`name` AS unitName
        FROM
          electric_meter_reading_month t1
        LEFT JOIN cust_meter t2 ON t1.meter_no = t2.loop_number
        LEFT JOIN accounting_unit t3 ON t2.accounting_id = t3.id
        WHERE
        t1.meter_no IN
        <foreach collection="loopNumbers" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND t1.read_time = DATE_FORMAT( DATE_SUB( curdate( ), INTERVAL 1 MONTH ), '%Y-%m' )
        ORDER BY t1.use_quantity DESC
    </select>

    <!-- 获取分公司总表-月 -->
    <select id="monthTotalVo" resultType="com.enn.vo.energy.business.vo.BoardMonthVo">
        SELECT
            t1.fees,
            t1.use_quantity AS useQuantity
        FROM
            electric_meter_reading_month t1
        WHERE
            t1.meter_no = #{loopNumber}
	    AND
        <if test="dateFlag == 1">
            t1.read_time = DATE_FORMAT( DATE_SUB( curdate( ), INTERVAL 2 MONTH ), '%Y-%m' );
        </if>
        <if test="dateFlag == 0">
            t1.read_time = DATE_FORMAT( DATE_SUB( curdate( ), INTERVAL 1 MONTH ), '%Y-%m' );
        </if>
    </select>

    <select id="getElecSumByM" resultType="com.enn.vo.energy.business.po.ElectricMeterReadingMonthPo">
        select SUM(use_quantity) AS useQuantity, SUM(fees) AS fees
        FROM electric_meter_reading_month
        WHERE read_time >= #{startTime}
        AND read_time &lt;= #{endTime}
        AND meter_no IN
        <foreach collection="meterNoList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>