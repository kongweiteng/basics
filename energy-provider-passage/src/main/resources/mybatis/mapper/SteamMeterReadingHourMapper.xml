<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enn.energy.passage.dao.SteamMeterReadingHourMapper" >
  <resultMap id="BaseResultMap" type="com.enn.vo.energy.business.po.SteamMeterReadingHourPo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="meter_no" property="meterNo" jdbcType="VARCHAR" />
    <result column="metric" property="metric" jdbcType="VARCHAR" />
    <result column="read_time" property="readTime" jdbcType="VARCHAR" />
    <result column="use_quantity" property="useQuantity" jdbcType="DECIMAL" />
    <result column="fees" property="fees" jdbcType="DECIMAL" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, meter_no, metric, read_time, use_quantity, fees
  </sql>
  
  <sql id="where_readinghour_query_condition">
  	<where>
  		<if test="equipID !=null">
  			and meter_no in 
  			<foreach collection="equipID" index="index" item="item" open="(" separator="," close=")">
                #{item}       
        	</foreach> 
  		</if>
  		<if test="start !=null and end !=null">
  			and read_time between #{start} and #{end}
  		</if>
     </where>
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from steam_meter_reading_hour
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from steam_meter_reading_hour
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.enn.vo.energy.business.po.SteamMeterReadingHourPo" useGeneratedKeys="true" keyProperty="id" >
    insert into steam_meter_reading_hour (meter_no, metric, read_time, 
      use_quantity, fees)
    values (#{meterNo,jdbcType=VARCHAR}, #{metric,jdbcType=VARCHAR}, #{readTime,jdbcType=VARCHAR}, 
      #{useQuantity,jdbcType=DECIMAL}, #{fees,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.enn.vo.energy.business.po.SteamMeterReadingHourPo" useGeneratedKeys="true" keyProperty="id" >
    insert into steam_meter_reading_hour
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="meterNo != null" >
        meter_no,
      </if>
      <if test="metric != null" >
        metric,
      </if>
      <if test="readTime != null" >
        read_time,
      </if>
      <if test="useQuantity != null" >
        use_quantity,
      </if>
      <if test="fees != null" >
        fees,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="meterNo != null" >
        #{meterNo,jdbcType=VARCHAR},
      </if>
      <if test="metric != null" >
        #{metric,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        #{readTime,jdbcType=VARCHAR},
      </if>
      <if test="useQuantity != null" >
        #{useQuantity,jdbcType=DECIMAL},
      </if>
      <if test="fees != null" >
        #{fees,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.enn.vo.energy.business.po.SteamMeterReadingHourPo" >
    update steam_meter_reading_hour
    <set >
      <if test="meterNo != null" >
        meter_no = #{meterNo,jdbcType=VARCHAR},
      </if>
      <if test="metric != null" >
        metric = #{metric,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        read_time = #{readTime,jdbcType=VARCHAR},
      </if>
      <if test="useQuantity != null" >
        use_quantity = #{useQuantity,jdbcType=DECIMAL},
      </if>
      <if test="fees != null" >
        fees = #{fees,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.enn.vo.energy.business.po.SteamMeterReadingHourPo" >
    update steam_meter_reading_hour
    set meter_no = #{meterNo,jdbcType=VARCHAR},
      metric = #{metric,jdbcType=VARCHAR},
      read_time = #{readTime,jdbcType=VARCHAR},
      use_quantity = #{useQuantity,jdbcType=DECIMAL},
      fees = #{fees,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!-- 获取车间前一小时用汽情况 -->
    <select id="steamHourData" resultType="com.enn.vo.energy.passage.vo.SteamVo">
        SELECT
            t1.id AS id,
            t1.meter_no AS meterNo,
            t1.use_quantity AS useQuantity,
            t1.quantity AS quantity,
            t1.fees AS fees
        FROM
            steam_meter_reading_hour t1
        WHERE
            t1.read_time BETWEEN DATE_FORMAT( date_sub( now( ), INTERVAL 1 HOUR ), '%Y-%m-%d %H:00:00' )
            AND DATE_FORMAT( NOW( ), '%Y-%m-%d %H:00:00' )
            AND t1.metric = 'EMS.FsIntLP'
    </select>

    <!-- 批量更新fees -->
    <update id="updateBatch" parameterType="java.util.List">
        update steam_meter_reading_hour
        <trim prefix="set" suffixOverrides=",">

            <trim prefix="fees =case" suffix="end,">
                <foreach collection="steamVoList" item="cus">
                    <if test="cus.fees!=null and cus.fees != ''">
                        when id=#{cus.id} then #{cus.fees}
                    </if>
                </foreach>
            </trim>
        </trim>
        <where>
            <foreach collection="steamVoList" separator="or" item="cus">
                id = #{cus.id}
            </foreach>
        </where>
    </update>

    <!-- 符合条件-小时-用汽信息 -->
    <select id="steamHourDatas" resultType="com.enn.vo.energy.passage.vo.SteamVo">
        SELECT
            t1.id AS id,
            t1.meter_no AS meterNo,
            IFNULL(t1.use_quantity, 0) AS useQuantity,
            IFNULL(t1.quantity, 0) AS quantity,
            t1.fees AS fees
        FROM
          steam_meter_reading_hour t1
        WHERE
            t1.metric = 'EMS.FsIntLP'
            <if test="meterNo != null and meterNo != ''">
                AND t1.meter_no = #{meterNo}
            </if>
            <if test="startTime != null and startTime !=''" >
                AND
                t1.read_time &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime !=''" >
                AND t1.read_time &lt;= #{endTime}
            </if>
    </select>
</mapper>